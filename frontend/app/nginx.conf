# üåê NGINX FRONTEND - OPTIMIZADO PARA SYNOLOGY NAS
server {
    listen 80;
    root /usr/share/nginx/html;
    index index.html;
    
    # üìä Log b√°sico para monitoreo
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # üóúÔ∏è COMPRESI√ìN AGRESIVA (cr√≠tico para NAS con ancho de banda limitado)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types 
        text/css
        text/javascript
        application/javascript
        application/json
        text/plain
        text/xml
        application/xml
        application/xml+rss;

    # üíæ CACHE AGRESIVO para assets est√°ticos (reduce I/O en discos NAS)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Compresi√≥n espec√≠fica para assets
        gzip_static on;
        
        # Logs off para assets (reduce I/O)
        access_log off;
    }

    # üîÑ SPA ROUTING - Todas las rutas del frontend van a index.html
    location / {
        try_files $uri $uri/ /index.html;
        
        # Sin cache para el HTML principal
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # CORS b√°sico para desarrollo
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization, Cache-Control';
    }

    # üîó PROXY hacia el BACKEND - Rutas /api
    location /api {
        # Usar el nombre del contenedor del backend
        proxy_pass http://backend:3000;
        
        # Headers de proxy est√°ndar
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts optimizados para NAS
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # CORS para APIs
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization, Cache-Control';
        
        # Manejo de preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
            add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization, Cache-Control';
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;
            return 204;
        }
    }

    # üéûÔ∏è PROXY hacia CDN - Para contenido multimedia
    location /cdn {
        proxy_pass http://cdn1:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache espec√≠fico para contenido multimedia
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
        
        # CORS para multimedia
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
        add_header Access-Control-Allow-Headers 'Range';
    }

    # üóÇÔ∏è PROXY directo a MinIO para assets
    location /storage {
        proxy_pass http://minio:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Headers espec√≠ficos para S3/MinIO
        proxy_set_header X-Amz-Content-SHA256 UNSIGNED-PAYLOAD;
        
        # CORS para almacenamiento
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
        add_header Access-Control-Allow-Headers 'Range, Authorization';
    }

    # ü©∫ HEALTH CHECK para Synology monitoring
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # üîí SEGURIDAD B√ÅSICA
    # Ocultar versi√≥n de nginx
    server_tokens off;
    
    # Prevenir clickjacking
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # XSS Protection
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # üö´ Bloquear acceso a archivos sensibles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(package\.json|yarn\.lock|node_modules) {
        deny all;
        access_log off;
        log_not_found off;
    }
}